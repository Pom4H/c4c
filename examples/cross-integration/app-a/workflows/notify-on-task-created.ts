/**
 * Workflow: Notify on Task Created
 * 
 * –ü–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å App B (notification-service),
 * —ç—Ç–æ—Ç workflow –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏
 */

import type { WorkflowDefinition } from '@c4c/workflow';

export const notifyOnTaskCreated: WorkflowDefinition = {
  id: 'notify-on-task-created',
  name: 'Send notification when task is created',
  description: 'Integrates with notification service to send alerts',
  
  // –¢—Ä–∏–≥–≥–µ—Ä: –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞
  trigger: {
    type: 'webhook',
    config: {
      procedure: 'tasks.trigger.created',
      provider: 'task-manager',
    },
  },
  
  steps: [
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏
    {
      id: 'get-task',
      name: 'Get task details',
      procedure: 'tasks.get',
      input: {
        id: '{{ trigger.data.id }}',
      },
    },
    
    // –®–∞–≥ 2: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ App B (–ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏!)
    // –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: c4c integrate http://localhost:3002/openapi.json --name notification-service
    // –°—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞: notification-service.notifications.send
    {
      id: 'send-notification',
      name: 'Send notification via Notification Service',
      procedure: 'notification-service.notifications.send', // ‚Üê –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∏–∑ App B!
      input: {
        message: 'üÜï New task created: {{ steps.get-task.output.title }}',
        channel: 'push',
        priority: '{{ steps.get-task.output.priority === "high" ? "urgent" : "normal" }}',
        metadata: {
          taskId: '{{ steps.get-task.output.id }}',
          status: '{{ steps.get-task.output.status }}',
          source: 'task-manager',
        },
      },
    },
    
    // –®–∞–≥ 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    {
      id: 'log',
      name: 'Log notification sent',
      procedure: 'system.log',
      input: {
        level: 'info',
        message: 'Notification sent for task creation',
        data: {
          taskId: '{{ steps.get-task.output.id }}',
          notificationId: '{{ steps.send-notification.output.id }}',
        },
      },
    },
  ],
};

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ü–û–°–õ–ï –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:
// 1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ App B: cd app-b && pnpm dev
// 2. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ App B –≤ App A:
//    cd app-a && c4c integrate http://localhost:3002/openapi.json --name notification-service
// 3. –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ 'notification-service.notifications.send' –¥–æ—Å—Ç—É–ø–Ω–∞!
// 4. –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–¥–∞—á—É —á–µ—Ä–µ–∑ API App A
// 5. Workflow –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ App B
