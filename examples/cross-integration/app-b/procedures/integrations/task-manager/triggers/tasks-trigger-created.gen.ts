// This file is auto-generated by c4c integrate command
// Do not edit manually.

import type { Procedure, Contract } from "@c4c/core";
import { z } from "zod";

export const TasksTriggerCreatedContract: Contract = {
  name: "task-manager.tasks.trigger.created",
  description: "Webhook fired when a new task is created",
  input: z.record(z.string(), z.unknown()),
  output: z.record(z.string(), z.unknown()),
  metadata: {
    exposure: "external" as const,
    roles: ["workflow-node"],
    provider: "task-manager",
    operation: "tasksTriggerCreated",
    tags: ["task-manager", "webhook"],
    type: "trigger" as const,
    trigger: {
      type: "webhook",
    },
  },
};

// Webhook triggers don't have a handler - they are registered as event receivers
export const TasksTriggerCreatedProcedure: Procedure = {
  contract: TasksTriggerCreatedContract,
  handler: async () => {
    throw new Error('Webhook triggers should not be called directly - they are invoked by the workflow engine');
  },
};
