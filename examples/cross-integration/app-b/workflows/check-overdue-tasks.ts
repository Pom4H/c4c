/**
 * Workflow: Check Overdue Tasks
 * 
 * –ü–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å App A (task-manager),
 * —ç—Ç–æ—Ç workflow –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */

import type { WorkflowDefinition } from '@c4c/workflow';

export const checkOverdueTasks: WorkflowDefinition = {
  id: 'check-overdue-tasks',
  name: 'Check for overdue tasks and notify',
  description: 'Periodically checks task manager for overdue tasks',
  
  // –¢—Ä–∏–≥–≥–µ—Ä: –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å cron schedule
  trigger: {
    type: 'schedule',
    config: {
      schedule: '0 9 * * *', // –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00
    },
  },
  
  steps: [
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ –∏–∑ App A (–ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏!)
    // –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: c4c integrate http://localhost:3001/openapi.json --name task-manager
    // –°—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞: task-manager.tasks.list
    {
      id: 'get-tasks',
      name: 'Fetch all tasks from Task Manager',
      procedure: 'task-manager.tasks.list', // ‚Üê –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∏–∑ App A!
      input: {
        status: 'in_progress', // –¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
      },
    },
    
    // –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
    {
      id: 'filter-overdue',
      name: 'Filter overdue tasks',
      procedure: 'tasks.filter.overdue', // –õ–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
      input: {
        tasks: '{{ steps.get-tasks.output.tasks }}',
        currentDate: '{{ new Date().toISOString() }}',
      },
    },
    
    // –®–∞–≥ 3: –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
    {
      id: 'count-overdue',
      name: 'Count overdue tasks',
      procedure: 'transform.count',
      input: {
        items: '{{ steps.filter-overdue.output.overdueTasks }}',
      },
    },
    
    // –®–∞–≥ 4: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ
    {
      id: 'send-notification',
      name: 'Send overdue tasks notification',
      procedure: 'notifications.send', // –õ–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ App B
      condition: '{{ steps.count-overdue.output.count > 0 }}',
      input: {
        message: '‚ö†Ô∏è You have {{ steps.count-overdue.output.count }} overdue task(s)!',
        channel: 'email',
        priority: 'high',
        metadata: {
          overdueTasks: '{{ steps.filter-overdue.output.overdueTasks }}',
          source: 'notification-service',
          checkTime: '{{ new Date().toISOString() }}',
        },
      },
    },
    
    // –®–∞–≥ 5: –î–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    {
      id: 'notify-each-task',
      name: 'Send notification for each overdue task',
      procedure: 'notifications.send',
      condition: '{{ steps.count-overdue.output.count > 0 }}',
      forEach: '{{ steps.filter-overdue.output.overdueTasks }}',
      input: {
        message: 'üìã Task "{{ item.title }}" is overdue! Due: {{ item.dueDate }}',
        channel: 'push',
        priority: 'urgent',
        recipient: '{{ item.assignee }}',
        metadata: {
          taskId: '{{ item.id }}',
          dueDate: '{{ item.dueDate }}',
          daysOverdue: '{{ calculateDaysOverdue(item.dueDate) }}',
        },
      },
    },
  ],
};

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ü–û–°–õ–ï –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:
// 1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ App A: cd app-a && pnpm dev
// 2. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ App A –≤ App B:
//    cd app-b && c4c integrate http://localhost:3001/openapi.json --name task-manager
// 3. –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ 'task-manager.tasks.list' –¥–æ—Å—Ç—É–ø–Ω–∞!
// 4. –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á —Å –ø—Ä–æ—à–µ–¥—à–∏–º dueDate –≤ App A
// 5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ workflow –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å cron
// 6. App B –ø–æ–ª—É—á–∏—Ç –∑–∞–¥–∞—á–∏ –∏–∑ App A –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
