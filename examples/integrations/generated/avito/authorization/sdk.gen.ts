// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options as ClientOptions,
  type Client,
  type TDataShape,
  urlSearchParamsBodySerializer
} from './client'
import type { PostTokenData, PostTokenResponses } from './types.gen'
import { client } from './client.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * Получение временного ключа для авторизации
 */
export const postToken = <ThrowOnError extends boolean = false>(
  options?: Options<PostTokenData, ThrowOnError>
) => {
  return (options?.client ?? client).post<PostTokenResponses, unknown, ThrowOnError>({
    ...urlSearchParamsBodySerializer,
    url: '/token',
    ...options,
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
      ...options?.headers
    }
  })
}
