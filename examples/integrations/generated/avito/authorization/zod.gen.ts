// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod'

export const zGetTokenOAuthRequest = z.object({
  client_id: z.string(),
  client_secret: z.string(),
  code: z.string(),
  grant_type: z.string().default('authorization_code')
})

export const zGetTokenRequest = z.object({
  client_id: z.string(),
  client_secret: z.string(),
  grant_type: z.string().default('client_credentials')
})

export const zRefreshRequest = z.object({
  client_id: z.string(),
  client_secret: z.string(),
  grant_type: z.string().default('refresh_token'),
  refresh_token: z.string()
})

/**
 * Токен для авторизации
 */
export const zAuthHeader = z.string()

/**
 * Идентификатор чата (клиента)
 */
export const zChatId = z.string()

export const zItemIds = z.string()

/**
 * Количество сообщений на странице (положительное число больше 0 и меньше 100)
 */
export const zLimit = z.int().default(100)

/**
 * Идентификатор сообщения
 */
export const zMessageId = z.string()

export const zOffset = z.int().default(0)

/**
 * Номер страницы
 */
export const zPage = z.int()

/**
 * Идентификатор объявления на сайте
 */
export const zPathItemId = z.coerce.bigint()

/**
 * Номер пользователя в Личном кабинете Авито
 */
export const zPathUserId = z.coerce.bigint()

/**
 * Идентификатор вакансии на сайте
 */
export const zPathVacancyId = z.coerce.bigint()

/**
 * Количество ресурсов на страницу
 */
export const zPerPage = z.int()

export const zUnreadOnly = z.boolean()

/**
 * Идентификатор пользователя (клиента)
 */
export const zUserId = z.coerce.bigint()

export const zPostTokenData = z.object({
  body: z.optional(z.union([zGetTokenRequest, zGetTokenOAuthRequest, zRefreshRequest])),
  path: z.optional(z.never()),
  query: z.optional(z.never())
})

/**
 * Успешный ответ
 */
export const zPostTokenResponse = z.union([
  z.object({
    access_token: z.optional(z.string()),
    expires_in: z.optional(z.number()),
    token_type: z.optional(z.string())
  }),
  z.object({
    access_token: z.optional(z.string()),
    expires_in: z.optional(z.number()),
    refresh_token: z.optional(z.string()),
    scope: z.optional(z.string()),
    token_type: z.optional(z.string())
  })
])
