// This file is auto-generated by @hey-api/openapi-ts

import type { GetItemInfoResponse, PutItemVasResponse, ItemStatsShallowResponse } from './types.gen'

const infoVasSchemaResponseTransformer = (data: any) => {
  if (data.finish_time) {
    data.finish_time = new Date(data.finish_time)
  }
  if (data.schedule) {
    data.schedule = data.schedule.map((item: any) => {
      new Date(item)
      return item
    })
  }
  return data
}

const itemInfoAvitoSchemaResponseTransformer = (data: any) => {
  if (data.finish_time) {
    data.finish_time = new Date(data.finish_time)
  }
  if (data.start_time) {
    data.start_time = new Date(data.start_time)
  }
  if (data.vas) {
    data.vas = data.vas.map((item: any) => {
      return infoVasSchemaResponseTransformer(item)
    })
  }
  return data
}

export const getItemInfoResponseTransformer = async (data: any): Promise<GetItemInfoResponse> => {
  data = itemInfoAvitoSchemaResponseTransformer(data)
  return data
}

const vasApplyAvitoSchemaResponseTransformer = (data: any) => {
  if (data.vas) {
    data.vas = infoVasSchemaResponseTransformer(data.vas)
  }
  return data
}

export const putItemVasResponseTransformer = async (data: any): Promise<PutItemVasResponse> => {
  data = vasApplyAvitoSchemaResponseTransformer(data)
  return data
}

const statisticsCountersSchemaResponseTransformer = (data: any) => {
  data = data.map((item: any) => {
    if (item.itemId) {
      item.itemId = BigInt(item.itemId.toString())
    }
    if (item.stats) {
      item.stats = item.stats.map((item: any) => {
        item.date = new Date(item.date)
        return item
      })
    }
    return item
  })
  return data
}

const statisticsResponseSchemaResponseTransformer = (data: any) => {
  if (data.result) {
    if (data.result.items) {
      data.result.items = statisticsCountersSchemaResponseTransformer(data.result.items)
    }
  }
  return data
}

export const itemStatsShallowResponseTransformer = async (
  data: any
): Promise<ItemStatsShallowResponse> => {
  data = statisticsResponseSchemaResponseTransformer(data)
  return data
}
