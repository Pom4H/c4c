// This file is auto-generated by @hey-api/openapi-ts

export const TokenResponseSchema = {
  type: 'object',
  properties: {
    access_token: {
      type: 'string',
      description: 'The access token issued by the authorization server'
    },
    token_type: {
      type: 'string',
      description: 'The type of the token issued'
    },
    expires_in: {
      type: 'integer',
      description: 'The lifetime in seconds of the access token'
    },
    refresh_token: {
      type: 'string',
      description: 'The refresh token issued by the authorization server'
    },
    scope: {
      type: 'string',
      description: 'The scope of the access token'
    }
  },
  required: ['access_token', 'token_type', 'expires_in']
} as const

export const TokeninfoSchema = {
  properties: {
    audience: {
      description: 'Who is the intended audience for this token. In general the same as issued_to.',
      type: 'string'
    },
    email: {
      description:
        'The email address of the user. Present only if the email scope is present in the request.',
      type: 'string'
    },
    expires_in: {
      description: 'The expiry time of the token, as number of seconds left until expiry.',
      format: 'int32',
      type: 'integer'
    },
    issued_to: {
      description: 'To whom was the token issued to. In general the same as audience.',
      type: 'string'
    },
    scope: {
      description: 'The space separated list of scopes granted to this token.',
      type: 'string'
    },
    user_id: {
      description: 'The obfuscated user id.',
      type: 'string'
    },
    verified_email: {
      description:
        'Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.',
      type: 'boolean'
    }
  },
  type: 'object'
} as const

export const UserinfoSchema = {
  properties: {
    email: {
      description: "The user's email address.",
      type: 'string'
    },
    family_name: {
      description: "The user's last name.",
      type: 'string'
    },
    gender: {
      description: "The user's gender.",
      type: 'string'
    },
    given_name: {
      description: "The user's first name.",
      type: 'string'
    },
    hd: {
      description: 'The hosted domain e.g. example.com if the user is Google apps user.',
      type: 'string'
    },
    id: {
      description: 'The obfuscated ID of the user.',
      type: 'string'
    },
    link: {
      description: 'URL of the profile page.',
      type: 'string'
    },
    locale: {
      description: "The user's preferred locale.",
      type: 'string'
    },
    name: {
      description: "The user's full name.",
      type: 'string'
    },
    picture: {
      description: "URL of the user's picture image.",
      type: 'string'
    },
    verified_email: {
      default: true,
      description:
        "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.",
      type: 'boolean'
    }
  },
  type: 'object'
} as const
