/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—É—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:
 * 1. –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π
 * 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ü–µ–¥—É—Ä —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
 * 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏
 * 4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä
 */

import { createModuleRegistry, createModule, registerModule, registerProcedure } from "./module-registry.js";
import { createComposition, createParallelComposition } from "./composition.js";
import * as userManagement from "./modules/user-management.js";
import * as analytics from "./modules/analytics.js";

/**
 * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—É—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
 */
async function demonstrateModularSystem() {
  console.log("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã tsdev\n");

  // 1. –°–æ–∑–¥–∞–µ–º —Ä–µ–µ—Å—Ç—Ä –º–æ–¥—É–ª–µ–π
  const registry = createModuleRegistry();

  // 2. –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
  const userModule = createModule({
    name: "user-management",
    description: "–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
    version: "1.0.0",
    namespace: "users",
    policies: ["withLogging", "withSpan"],
  });

  // 3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –º–æ–¥—É–ª–µ
  registerProcedure(userModule, userManagement.createUser, registry);
  registerProcedure(userModule, userManagement.getUser, registry);
  registerProcedure(userModule, userManagement.sendWelcomeEmail, registry);
  registerProcedure(userModule, userManagement.validateEmail, registry);
  registerProcedure(userModule, userManagement.hashPassword, registry);

  // 4. –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  const analyticsModule = createModule({
    name: "analytics",
    description: "–ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è",
    version: "1.0.0",
    namespace: "analytics",
    policies: ["withLogging", "withSpan", "withRetry"],
  });

  // 5. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  registerProcedure(analyticsModule, analytics.trackEvent, registry);
  registerProcedure(analyticsModule, analytics.processEvent, registry);
  registerProcedure(analyticsModule, analytics.storeEvent, registry);
  registerProcedure(analyticsModule, analytics.generateInsights, registry);

  // 6. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ
  registerModule(userModule, registry);
  registerModule(analyticsModule, registry);

  console.log("\nüìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ä–µ–µ—Å—Ç—Ä–∞:");
  console.log(JSON.stringify(getRegistryMetadata(registry), null, 2));

  // 7. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞
  console.log("\nüîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞:");

  // –ü—É–±–ª–∏—á–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã (–¥–æ—Å—Ç—É–ø–Ω—ã –∫–∞–∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã)
  console.log("\nüì° –ü—É–±–ª–∏—á–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã (—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã):");
  const publicProcedures = registry.publicProcedures;
  for (const [name, procedure] of publicProcedures) {
    console.log(`  - ${name} (${procedure.visibility}) - ${procedure.contract.description}`);
  }

  // –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –¥–ª—è –≤–æ—Ä–∫—Ñ–ª–æ—É
  console.log("\nüîÑ –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –¥–ª—è –≤–æ—Ä–∫—Ñ–ª–æ—É:");
  const workflowProcedures = registry.workflowProcedures;
  for (const [name, procedure] of workflowProcedures) {
    console.log(`  - ${name} (${procedure.visibility}) - ${procedure.contract.description}`);
  }

  // 8. –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ—Ü–µ–¥—É—Ä
  console.log("\nüß© –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä:");

  const userOnboardingComposition = createComposition({
    name: "userOnboarding",
    description: "–ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    procedures: [
      "users.createUser",
      "analytics.trackEvent",
    ],
    inputMapping: {
      "users.createUser": "input",
      "analytics.trackEvent": "users.createUser",
    },
    outputMapping: {
      "user": "users.createUser",
      "event": "analytics.trackEvent",
    },
    errorHandling: "retry",
    retryConfig: {
      maxAttempts: 3,
      delayMs: 1000,
      backoffMultiplier: 2,
    },
  }, registry);

  // 9. –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏—é
  console.log("\n‚ö° –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:");

  try {
    const result = await userOnboardingComposition.execute({
      name: "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤",
      email: "alexey@example.com",
      password: "securepassword123",
    }, {
      requestId: "req_123",
      timestamp: new Date(),
      metadata: {},
      module: "composition",
      moduleVersion: "1.0.0",
      dependencies: new Map(),
    });

    console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:", JSON.stringify(result, null, 2));
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:", error);
  }

  // 10. –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –∫–æ–º–ø–æ–∑–∏—Ü–∏—é
  console.log("\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:");

  const parallelComposition = createParallelComposition({
    name: "parallelAnalytics",
    description: "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö",
    procedures: [
      "analytics.processEvent",
      "analytics.generateInsights",
    ],
  }, registry);

  try {
    const parallelResult = await parallelComposition.execute({
      eventId: "event_123",
      userId: "user_456",
      event: "user.signup",
      properties: { source: "web" },
    }, {
      requestId: "req_456",
      timestamp: new Date(),
      metadata: {},
      module: "composition",
      moduleVersion: "1.0.0",
      dependencies: new Map(),
    });

    console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:", JSON.stringify(parallelResult, null, 2));
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:", error);
  }

  // 11. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä
  console.log("\nüéØ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä:");

  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—É–±–ª–∏—á–Ω—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É
    const userResult = await executeModuleProcedure(registry, "users.getUser", {
      id: "user_123",
    });

    console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", JSON.stringify(userResult, null, 2));
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
  }

  // 12. –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  console.log("\nüîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:");
  const validationErrors = validateModuleDependencies(registry);
  if (validationErrors.length === 0) {
    console.log("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤–∞–ª–∏–¥–Ω—ã");
  } else {
    console.log("‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:", validationErrors);
  }

  console.log("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
if (import.meta.url === `file://${process.argv[1]}`) {
  demonstrateModularSystem().catch(console.error);
}

export { demonstrateModularSystem };