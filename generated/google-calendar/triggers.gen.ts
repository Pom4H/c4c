// This file is auto-generated by @c4c/generators
// Trigger metadata extracted from OpenAPI specification

export const triggerMetadata = {
  "calendarcalendarsinsert": {
    "kind": "operation"
  },
  "calendarcalendarsget": {
    "kind": "operation"
  },
  "calendarcalendarsupdate": {
    "kind": "operation"
  },
  "calendarcalendarspatch": {
    "kind": "operation"
  },
  "calendarcalendarsdelete": {
    "kind": "operation"
  },
  "calendaracllist": {
    "kind": "operation"
  },
  "calendaraclinsert": {
    "kind": "operation"
  },
  "calendaraclwatch": {
    "kind": "subscription"
  },
  "calendaraclget": {
    "kind": "operation"
  },
  "calendaraclupdate": {
    "kind": "operation"
  },
  "calendaraclpatch": {
    "kind": "operation"
  },
  "calendaracldelete": {
    "kind": "operation"
  },
  "calendarcalendarsclear": {
    "kind": "operation"
  },
  "calendareventslist": {
    "kind": "subscription"
  },
  "calendareventsinsert": {
    "kind": "subscription"
  },
  "calendareventsimport": {
    "kind": "subscription"
  },
  "calendareventsquickadd": {
    "kind": "subscription"
  },
  "calendareventswatch": {
    "kind": "subscription"
  },
  "calendareventsget": {
    "kind": "subscription"
  },
  "calendareventsupdate": {
    "kind": "subscription"
  },
  "calendareventspatch": {
    "kind": "subscription"
  },
  "calendareventsdelete": {
    "kind": "subscription"
  },
  "calendareventsinstances": {
    "kind": "subscription"
  },
  "calendareventsmove": {
    "kind": "subscription"
  },
  "calendarchannelsstop": {
    "kind": "operation"
  },
  "calendarcolorsget": {
    "kind": "operation"
  },
  "calendarfreebusyquery": {
    "kind": "operation"
  },
  "calendarcalendarlistlist": {
    "kind": "operation"
  },
  "calendarcalendarlistinsert": {
    "kind": "operation"
  },
  "calendarcalendarlistwatch": {
    "kind": "subscription"
  },
  "calendarcalendarlistget": {
    "kind": "operation"
  },
  "calendarcalendarlistupdate": {
    "kind": "operation"
  },
  "calendarcalendarlistpatch": {
    "kind": "operation"
  },
  "calendarcalendarlistdelete": {
    "kind": "operation"
  },
  "calendarsettingslist": {
    "kind": "operation"
  },
  "calendarsettingswatch": {
    "kind": "subscription"
  },
  "calendarsettingsget": {
    "kind": "operation"
  }
} as const;

export const triggerOperationNames = {
  "calendarcalendarsinsert": "calendar.calendars.insert",
  "calendarcalendarsget": "calendar.calendars.get",
  "calendarcalendarsupdate": "calendar.calendars.update",
  "calendarcalendarspatch": "calendar.calendars.patch",
  "calendarcalendarsdelete": "calendar.calendars.delete",
  "calendaracllist": "calendar.acl.list",
  "calendaraclinsert": "calendar.acl.insert",
  "calendaraclwatch": "calendar.acl.watch",
  "calendaraclget": "calendar.acl.get",
  "calendaraclupdate": "calendar.acl.update",
  "calendaraclpatch": "calendar.acl.patch",
  "calendaracldelete": "calendar.acl.delete",
  "calendarcalendarsclear": "calendar.calendars.clear",
  "calendareventslist": "calendar.events.list",
  "calendareventsinsert": "calendar.events.insert",
  "calendareventsimport": "calendar.events.import",
  "calendareventsquickadd": "calendar.events.quickAdd",
  "calendareventswatch": "calendar.events.watch",
  "calendareventsget": "calendar.events.get",
  "calendareventsupdate": "calendar.events.update",
  "calendareventspatch": "calendar.events.patch",
  "calendareventsdelete": "calendar.events.delete",
  "calendareventsinstances": "calendar.events.instances",
  "calendareventsmove": "calendar.events.move",
  "calendarchannelsstop": "calendar.channels.stop",
  "calendarcolorsget": "calendar.colors.get",
  "calendarfreebusyquery": "calendar.freebusy.query",
  "calendarcalendarlistlist": "calendar.calendarList.list",
  "calendarcalendarlistinsert": "calendar.calendarList.insert",
  "calendarcalendarlistwatch": "calendar.calendarList.watch",
  "calendarcalendarlistget": "calendar.calendarList.get",
  "calendarcalendarlistupdate": "calendar.calendarList.update",
  "calendarcalendarlistpatch": "calendar.calendarList.patch",
  "calendarcalendarlistdelete": "calendar.calendarList.delete",
  "calendarsettingslist": "calendar.settings.list",
  "calendarsettingswatch": "calendar.settings.watch",
  "calendarsettingsget": "calendar.settings.get"
} as const;

export type TriggerKind = 'operation' | 'webhook' | 'callback' | 'subscription' | 'stream';

export interface TriggerMetadata {
  kind: TriggerKind;
  transport?: 'sse' | 'websocket' | 'http';
  subscriptionRegister?: string;
  subscriptionCallback?: string;
}

// Helper to get trigger metadata by operation name (normalized)
export function getTriggerMetadata(operationName: string): TriggerMetadata | undefined {
  const normalized = operationName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();
  return triggerMetadata[normalized as keyof typeof triggerMetadata];
}

// Get all triggers of a specific kind
export function getTriggersByKind(kind: TriggerKind): string[] {
  return Object.entries(triggerMetadata)
    .filter(([_, meta]) => meta.kind === kind)
    .map(([id]) => triggerOperationNames[id as keyof typeof triggerOperationNames] || id);
}
